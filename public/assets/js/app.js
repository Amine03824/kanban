import listModule from "./list.js";
import cardModule from "./card.js";
import utilsModule from "./utils.js";

// un objet qui contient des fonctions
const app = {
  base_url: "http://localhost:1337",
  // fonction d'initialisation, lanc√©e au chargement de la page
  async init() {
    // Initialisation des modules (on renseigne l'url de l'API)
    listModule.setBaseUrl(app.base_url);
    cardModule.setBaseUrl(app.base_url);
    console.log(`                                     ‚ö°lancement de app.init !‚ö°
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®‚¨õ‚¨õ‚¨õ
    ‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®‚¨õ‚¨õ‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õüüßüüßüüß‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üüß‚¨õ‚¨õ‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüü´üü®üü®üü®üü®üüß‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨õ‚¨õüü®üü®üü®üü®üüßüüß‚¨õ‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüü´üüßüü®üü®üü®üü®üü®üü®üüß‚¨õüü®üü®üü®üü®üü®üü®üü®‚¨õüüßüü®üü®üü®üü®üüßüüß‚¨õ‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüüßüüßüüßüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üüßüüßüüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüüßüüßüüßüüßüüßüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üüß‚¨õüüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüüß‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨õüü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüüßüü®üü®‚¨õ‚¨õ‚¨ú‚¨õüü®üü®üü®üü®üü®üü®‚¨õ‚¨õ‚¨ú‚¨õüü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®‚¨õ‚¨õ‚¨õ‚¨õüü®üü®üü®üü®üü®üü®‚¨õ‚¨õ‚¨õ‚¨õüü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨õüü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü•üü•üü®üü®üü®üü®üü®üü®‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü•üü•üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨õüü®üü•üü•üü•üü•üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü•üü•üü•üü•‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨õüü®üü•üü•üü•üü•üü®üü®‚¨õüü®üü®‚¨õ‚¨õüü®üü®‚¨õüü®üü®üü•üü•üü•üü•‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨õüü®üü®üü•üü•üü®üü®üü®üü®‚¨õ‚¨õüü®üü®‚¨õ‚¨õüü®üü®üü®üü®üü•üü•üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨õüüßüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨õüü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨õüüßüü®üü®üü®üü®üü®üü®üü®üüßüüßüüßüüßüü®üü®üü®üü®üü®üü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üüßüüßüü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨õüü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®üü®‚¨õüü®üü®üü®üü®üü®üü®‚¨õüü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨õüü®üü®üü®‚¨õüü®üü®üü®‚¨õüü®üü®üü®üü®üü®üü®‚¨õüü®üü®üü®‚¨õüü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®‚¨õ‚¨õüü®üü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üüßüüßüü´‚¨õüü®üü®üü®üüß‚¨õüü®üü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®üü®‚¨õüüßüü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüüßüüßüüß‚¨õ‚¨õüü®üü®üü®üüß‚¨õüü®üü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®üü®‚¨õüüßüü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüüßüü´üü´‚¨õüü®üü®üü®üü®üüß‚¨õüü®üü®‚¨õüü®üü®üü®üü®‚¨õüü®üü®‚¨õüüßüü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü´üü´üü´üü´‚¨õüü®üü®üü®üü®üü®üüß‚¨õ‚¨õüü®üü®üü®üü®üü®üü®‚¨õ‚¨õüüßüü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü´üü´üü´‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüü´‚¨õüüßüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüüßüü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®üü®üü®üü®üüßüüßüüßüüßüüßüü®üü®üü®üü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüüßüü®üüßüüß‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨õüüßüüßüü®üüß‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õüü®üü®üü®‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õüü®üü®üü®‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú
    ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨õ‚¨õ‚¨õ‚¨õ‚¨õ‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú‚¨ú`);

    app.addListenerToActions();
    await app.getListsFromAPI();
  },
  // Initialisation des √©v√©nements
  addListenerToActions() {
    // je r√©cup√®re mon bouton par son id
    document.querySelector("#addListButton").addEventListener("click", listModule.showAddModal);

    // j'ajoute l'√©v√©nement click sur mes boutons "close"
    const closeButtons = document.querySelectorAll(".close");
    for (const button of closeButtons) {
      button.addEventListener("click", utilsModule.hideModals);
    }

    // ajout de l'√©v√©nement "submit" lors de l'envoi du formulaire de cr√©ation d'une liste
    document.querySelector("#addListModal form").addEventListener("submit", listModule.handleAddForm);

    // ajout de l'√©v√©nement "submit" lors de l'envoi du formulaire de cr√©ation carte
    document.querySelector("#addCardModal form").addEventListener("submit", cardModule.handleAddForm);

    // j'ajoute l'√©v√©nement click sur mes boutons "+"
    // document.querySelectorAll(".is-pulled-right").forEach(button => button.addEventListener("click", app.showAddCardModal));

  },
  // R√©cup√©ration des listes et des cartes
  async getListsFromAPI() {
    let response;
    // j'appelle l'API pour r√©cup√©rer les listes et leurs cartes
    try{
      response = await fetch(`${app.base_url}/lists`);
    }
    catch(err){
      console.error(err);
    }
    
    if (response && response.ok) {
      let lists = await response.json();

      // je parcours les listes
      for (let list of lists) {
        console.log(list)
        listModule.makeInDOM(list);
        // je parcours les cartes de la liste courante
        for (let card of list.card) {
          cardModule.makeInDOM(card);
        }
      }
    }
    else {
      alert("Probl√®me avec l'API !!!");
    }
  },



};


// on accroche un √©couteur d'√©v√®nement sur le document : quand le chargement est termin√©, on lance app.init
document.addEventListener('DOMContentLoaded', app.init);